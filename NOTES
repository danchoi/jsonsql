
String literals

mysql
- http://dev.mysql.com/doc/refman/5.0/en/string-literals.html
postgres
- http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html
sqlite3
- https://www.sqlite.org/lang_expr.html

------------------------------------------------------------------------
MySQL

A string is a sequence of bytes or characters, enclosed within either single
quote (“'”) or double quote (“"”) characters. Examples:

'a string'
"another string"

Quoted strings placed next to each other are concatenated to a single string.
The following lines are equivalent:

'a string'
'a' ' ' 'string'

If the ANSI_QUOTES SQL mode is enabled, string literals can be quoted only
within single quotation marks because a string quoted within double quotation
marks is interpreted as an identifier.

Within a string, certain sequences have special meaning unless the
NO_BACKSLASH_ESCAPES SQL mode is enabled. Each of these sequences begins with a
backslash (“\”), known as the escape character. MySQL recognizes the escape
sequences shown in Table 9.1, “Special Character Escape Sequences”. For all
other escape sequences, backslash is ignored. That is, the escaped character is
interpreted as if it was not escaped. For example, “\x” is just “x”. These
sequences are case sensitive. For example, “\b” is interpreted as a backspace,
but “\B” is interpreted as “B”. Escape processing is done according to the
character set indicated by the character_set_connection system variable. This
is true even for strings that are preceded by an introducer that indicates a
different character set, as discussed in Section 10.1.3.5, “Character String
Literal Character Set and Collation”.

Table 9.1 Special Character Escape Sequences

Escape Sequence	Character Represented by Sequence
\0	An ASCII NUL (0x00) character.
\'	A single quote (“'”) character.
\"	A double quote (“"”) character.
\b	A backspace character.
\n	A newline (linefeed) character.
\r	A carriage return character.
\t	A tab character.
\Z	ASCII 26 (Control+Z). See note following the table.
\\	A backslash (“\”) character.
\%	A “%” character. See note following the table.
\_	A “_” character. See note following the table.



Sqlite3:

A string constant is formed by enclosing the string in single quotes ('). A
single quote within the string can be encoded by putting two single quotes in a
row - as in Pascal. C-style escapes using the backslash character are not
supported because they are not standard SQL.

BLOB literals are string literals containing hexadecimal data and preceded by a
single "x" or "X" character. Example: X'53514C697465'

A literal value can also be the token "NULL".
